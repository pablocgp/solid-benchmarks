#!/bin/bash

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Source solids4Foam scripts
source solids4FoamScripts.sh

# Load user variables
echo "Sourcing the USER_VARIABLE_NAMES file"
source USER_VARIABLE_NAMES

if [[ -f "${TIMES_FILE}" ]]
then
    echo "The file ${TIMES_FILE} already exists: please remove it"; echo
    exit 1;
fi

# Write headers to results files
echo "# Mesh Time (in seconds) Max Memory (in kB, if 'time' was used) L2-disp LInf-disp L2-sigmaZZ LInf-sigmaZZ" >> "${TIMES_FILE}"

# Record results
for i in `seq 1 6`;
do
    CASE="${CASE_NAME}.$i.${MACHINE}"

    if [[ ! -f "${CASE}/log.solids4Foam" ]]
    then
        echo "Skipping: ${CASE}/log.solids4Foam not found"
        continue
    fi

    # Enter the case directory
    cd "${CASE}"

    if [ "$(tail -n 1 log.solids4Foam | wc -c)" -eq 1 ]
    then
        # The last line is empty so "time" was not used
        echo "Extracting the times from ${CASE}"

        MAX_MEMORY="memory_not_recorded"

        # Record the time
        CLOCK_TIME=$(tail -42 log.solids4Foam | head -1 | awk '{print $7}')

        # Extract the L2 (average) error for displacement
        DISP_L2_ERROR=$(tail -7 log.solids4Foam | head -1 | awk '{print $2}')

        # Extract the LInfinity (max) error for displacement
        DISP_LINF_ERROR=$(tail -7 log.solids4Foam | head -1 | awk '{print $3}')
    else
        echo "Extracting the times and max memory usage from ${CASE}"

        # Extract the max memory from the last line
        MAX_MEMORY=$(awk '/Maximum resident set size/ {print $6}' log.solids4Foam)

        # Record the time
        CLOCK_TIME=$(tail -43 log.solids4Foam | head -1 | awk '{print $7}')

        # Extract the L2 (average) error for displacement
        DISP_L2_ERROR=$(tail -8 log.solids4Foam | head -1 | awk '{print $2}')

        # Extract the LInfinity (max) error for displacement
        DISP_LINF_ERROR=$(tail -8 log.solids4Foam | head -1 | awk '{print $3}')
    fi

    if [[ ! -f "postProcessing/0/sphericalCavityStressErrors.dat" ]]
    then
        echo "Skipping: ${CASE}/postProcessing/0/sphericalCavityStressErrors.dat not found"
        continue
    fi

    # Extract the L2 (average) error for sigmaZZ
    STRESS_L2_ERROR=$(awk 'END {print $(NF-1)}' postProcessing/0/sphericalCavityStressErrors.dat)

    # Extract the LInfinity (max) error for sigmaZZ
    STRESS_LINF_ERROR=$(awk 'END {print $(NF)}' postProcessing/0/sphericalCavityStressErrors.dat)

    # Write data to file
    echo "$i $CLOCK_TIME $MAX_MEMORY $DISP_L2_ERROR $DISP_LINF_ERROR $STRESS_L2_ERROR $STRESS_LINF_ERROR" >> ../"${TIMES_FILE}"

    # Navigate back to the parent directory
    cd ..
done

echo; echo "Done"; echo
